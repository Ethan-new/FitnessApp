{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CustomInput from \"../../componets/CustomInput\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConfirmEmailScreen = function ConfirmEmailScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var onConfirmPressed = function onConfirmPressed() {\n    var response;\n    return _regeneratorRuntime.async(function onConfirmPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.confirmSignUp(username, code));\n\n          case 3:\n            response = _context.sent;\n            navigation.navigate('SignIn');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Oops\", e.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onResendcodePressed = function onResendcodePressed() {\n    var response;\n    return _regeneratorRuntime.async(function onResendcodePressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Auth.resendSignUp(username));\n\n          case 3:\n            response = _context2.sent;\n            Alert.alert(\"Success\", \"Code has been sent to your email\");\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(\"Oops\", e.message);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('SignIn');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: [styles.title],\n        children: \"Confirm Your Email\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Enter your username here\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        placeholder: \"Enter your confirmation code\",\n        value: code,\n        setValue: setCode\n      }), _jsx(CustomButton, {\n        text: \"Confirm\",\n        onPress: onConfirmPressed\n      }), _jsx(CustomButton, {\n        text: \"Resend code\",\n        onPress: onResendcodePressed,\n        type: \"SECONDARY\"\n      }), _jsx(CustomButton, {\n        text: \"Back to Sign in.\",\n        onPress: onSignInPressed,\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  },\n  text: {\n    color: 'gray',\n    marginVertical: 10\n  },\n  link: {\n    color: '#FDB075'\n  }\n});\nexport default ConfirmEmailScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/ConfirmEmailScreen/ConfirmEmailScreen.js"],"names":["React","useState","CustomInput","CustomButton","useNavigation","Auth","ConfirmEmailScreen","code","setCode","username","setUsername","navigation","onConfirmPressed","confirmSignUp","response","navigate","Alert","alert","e","message","onResendcodePressed","resendSignUp","onSignInPressed","styles","root","title","StyleSheet","create","alignItems","padding","fontSize","fontWeight","color","margin","text","marginVertical","link"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {View, Text, StyleSheet, ScrollView,Alert} from 'react-native'\r\n\r\nimport CustomInput from \"../../componets/CustomInput\";\r\nimport CustomButton from \"../../componets/CustomButton\";\r\n\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Auth } from \"aws-amplify\";\r\n\r\nconst ConfirmEmailScreen = () => {\r\n\r\n\r\nconst [code, setCode] = useState('');\r\nconst [username, setUsername] = useState('');\r\nconst navigation = useNavigation();\r\n    \r\nconst onConfirmPressed = async () => {\r\n    try {\r\n        const response = await Auth.confirmSignUp(username,code);\r\n        navigation.navigate('SignIn');\r\n\r\n    }\r\n    catch{\r\n        Alert.alert(\"Oops\", e.message);        \r\n    }\r\n\r\n}\r\nconst onResendcodePressed =async  () => {\r\n    try {\r\n        const response = await Auth.resendSignUp(username);\r\n        Alert.alert(\"Success\", \"Code has been sent to your email\"); \r\n\r\n    }\r\n    catch{\r\n        Alert.alert(\"Oops\", e.message);        \r\n    }\r\n}\r\n\r\nconst onSignInPressed = () => {\r\n    navigation.navigate('SignIn');\r\n}\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.root}>\r\n\r\n            <Text style={[styles.title]}>Confirm Your Email</Text>\r\n            <CustomInput placeholder=\"Enter your username here\" value={username} setValue={setUsername}/>\r\n            <CustomInput placeholder=\"Enter your confirmation code\" value={code} setValue={setCode}/>\r\n\r\n\r\n            <CustomButton text=\"Confirm\" onPress={onConfirmPressed}/>\r\n\r\n            <CustomButton text=\"Resend code\" onPress={onResendcodePressed} type='SECONDARY'/>\r\n            <CustomButton text=\"Back to Sign in.\" onPress={onSignInPressed} type='TERTIARY'/>\r\n\r\n        </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root:{\r\n        alignItems: 'center',\r\n        padding:20,\r\n    },\r\n    title: {\r\n        fontSize:24,\r\n        fontWeight:'bold',\r\n        color:'#051C60',\r\n        margin:10,\r\n    },\r\n    text:{\r\n        color:'gray',\r\n        marginVertical:10,\r\n    },\r\n    link:{\r\n        color:'#FDB075',\r\n\r\n    }\r\n})\r\nexport default ConfirmEmailScreen;"]},"metadata":{},"sourceType":"module"}