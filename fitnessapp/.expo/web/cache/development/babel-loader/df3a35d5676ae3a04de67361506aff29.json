{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SignInScreen from \"../screens/SignInScreen\";\nimport SignUpScreen from \"../screens/SignUpScreen\";\nimport ConfirmEmailScreen from \"../screens/ConfirmEmailScreen\";\nimport ForgotPassWordScreen from \"../screens/ForgotPassWordScreen\";\nimport RestPassWordScreen from \"../screens/RestPassWordScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CalanderScreen from \"../screens/CalanderScreen\";\nimport ModifyScreen from \"../screens/ModifyScreen\";\nimport { Auth, Hub } from 'aws-amplify';\nimport UserProfileScreen from \"../screens/UserProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar Navigation = function Navigation() {\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      log = _useState4[0],\n      setLog = _useState4[1];\n\n  var checkUser = function checkUser() {\n    var authUser;\n    return _regeneratorRuntime.async(function checkUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.currentAuthenticatedUser({\n              bypassCache: true\n            }));\n\n          case 3:\n            authUser = _context.sent;\n            setLog(true);\n            setUser(authUser);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            setUser(null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    checkUser();\n  }, []);\n  useEffect(function () {\n    var listener = function listener(data) {\n      console.log(data);\n\n      if (data.payload.event == 'signIn' || data.payload.event == 'signOut') {\n        checkUser();\n        setLog(false);\n      }\n    };\n\n    Hub.listen('auth', listener);\n    return function () {\n      return Hub.remove('auth', listener);\n    };\n  }, []);\n\n  if (user == undefined && log == true) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: user ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen\n        }), _jsx(Stack.Screen, {\n          name: \"CalanderScreen\",\n          component: CalanderScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ModifyScreen\",\n          component: ModifyScreen\n        }), _jsx(Stack.Screen, {\n          name: \"UserProfileScreen\",\n          component: UserProfileScreen\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"SignIn\",\n          component: SignInScreen\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUpScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ConfirmEmail\",\n          component: ConfirmEmailScreen\n        }), _jsx(Stack.Screen, {\n          name: \"ForgotPassWord\",\n          component: ForgotPassWordScreen\n        }), _jsx(Stack.Screen, {\n          name: \"RestPassWord\",\n          component: RestPassWordScreen\n        })]\n      })\n    })\n  });\n};\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/navigation/index.js"],"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","SignInScreen","SignUpScreen","ConfirmEmailScreen","ForgotPassWordScreen","RestPassWordScreen","HomeScreen","CalanderScreen","ModifyScreen","Auth","Hub","UserProfileScreen","Stack","Navigation","undefined","user","setUser","log","setLog","checkUser","currentAuthenticatedUser","bypassCache","authUser","listener","data","console","payload","event","listen","remove","flex","justifyContent","alignItems","headerShown"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from \"react\";\r\nimport {View, Text,ActivityIndicator} from 'react-native'\r\nimport {NavigationContainer} from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport SignInScreen from '../screens/SignInScreen';\r\nimport SignUpScreen from '../screens/SignUpScreen';\r\nimport ConfirmEmailScreen from '../screens/ConfirmEmailScreen'\r\nimport ForgotPassWordScreen from '../screens/ForgotPassWordScreen';\r\nimport RestPassWordScreen from '../screens/RestPassWordScreen';\r\nimport HomeScreen from '../screens/HomeScreen'\r\nimport CalanderScreen from \"../screens/CalanderScreen\";\r\nimport ModifyScreen from \"../screens/ModifyScreen\";\r\nimport {Auth, Hub} from 'aws-amplify'\r\nimport UserProfileScreen from \"../screens/UserProfileScreen\";\r\nconst Stack = createNativeStackNavigator();\r\nconst Navigation = () => {\r\n\r\n    const [user, setUser] = useState(undefined);\r\n    const [log, setLog] = useState(false);\r\n    const checkUser = async() => {\r\n    \r\n    try {\r\n   \r\n        const authUser = await Auth.currentAuthenticatedUser({bypassCache: true})\r\n        setLog(true);\r\n    setUser(authUser);\r\n    } catch (e) {\r\n        setUser(null)\r\n\r\n    }\r\n\r\n}\r\n\r\n    useEffect(() => {\r\n        checkUser();\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        const listener = (data)=> {\r\n            console.log(data);\r\n            if (data.payload.event == 'signIn' || data.payload.event == 'signOut') {\r\n                checkUser();\r\n                setLog(false);\r\n            }\r\n        }\r\n\r\n        Hub.listen('auth',listener)\r\n        return() => Hub.remove('auth', listener)\r\n    }, [])\r\n    if (user == undefined && log==true) {\r\n        return(\r\n            <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n                <ActivityIndicator></ActivityIndicator>\r\n            </View>\r\n        )\r\n    }\r\n    return (\r\n        <NavigationContainer >\r\n            <Stack.Navigator screenOptions={{headerShown: false}}>\r\n                {user ? (\r\n                    <>\r\n                    <Stack.Screen name=\"Home\" component ={HomeScreen} />\r\n                    <Stack.Screen name=\"CalanderScreen\" component ={CalanderScreen} />\r\n                    <Stack.Screen name=\"ModifyScreen\" component={ModifyScreen}/>\r\n                    <Stack.Screen name=\"UserProfileScreen\" component={UserProfileScreen} />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <Stack.Screen name=\"SignIn\" component ={SignInScreen} />\r\n                    <Stack.Screen name=\"SignUp\" component ={SignUpScreen} />\r\n                    <Stack.Screen name=\"ConfirmEmail\" component ={ConfirmEmailScreen} />\r\n                    <Stack.Screen name=\"ForgotPassWord\" component ={ForgotPassWordScreen} />\r\n                    <Stack.Screen name=\"RestPassWord\" component ={RestPassWordScreen} />\r\n                    </>\r\n                )}\r\n\r\n      \r\n            </Stack.Navigator>\r\n\r\n        </NavigationContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}