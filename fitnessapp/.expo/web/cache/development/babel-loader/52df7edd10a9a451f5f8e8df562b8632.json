{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport min from 'lodash/min';\nimport map from 'lodash/map';\nimport styleConstructor, { HOURS_SIDEBAR_WIDTH } from \"./style\";\nimport populateEvents, { HOUR_BLOCK_HEIGHT } from \"./Packer\";\nimport TimelineHours from \"./TimelineHours\";\nimport EventBlock from \"./EventBlock\";\nimport NowIndicator from \"./NowIndicator\";\nimport useTimelineOffset from \"./useTimelineOffset\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    dimensionWidth = _Dimensions$get.width;\n\nvar Timeline = function Timeline(props) {\n  var _props$format24h = props.format24h,\n      format24h = _props$format24h === void 0 ? true : _props$format24h,\n      _props$start = props.start,\n      start = _props$start === void 0 ? 0 : _props$start,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 24 : _props$end,\n      date = props.date,\n      _props$events = props.events,\n      events = _props$events === void 0 ? [] : _props$events,\n      onEventPress = props.onEventPress,\n      onBackgroundLongPress = props.onBackgroundLongPress,\n      onBackgroundLongPressOut = props.onBackgroundLongPressOut,\n      renderEvent = props.renderEvent,\n      theme = props.theme,\n      scrollToFirst = props.scrollToFirst,\n      showNowIndicator = props.showNowIndicator,\n      scrollOffset = props.scrollOffset,\n      onChangeOffset = props.onChangeOffset,\n      eventTapped = props.eventTapped;\n  var scrollView = useRef();\n  var calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n  var styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n\n  var _useTimelineOffset = useTimelineOffset({\n    onChangeOffset: onChangeOffset,\n    scrollOffset: scrollOffset,\n    scrollViewRef: scrollView\n  }),\n      scrollEvents = _useTimelineOffset.scrollEvents;\n\n  var packedEvents = useMemo(function () {\n    var width = dimensionWidth - HOURS_SIDEBAR_WIDTH;\n    return populateEvents(events, width, start);\n  }, [events, start]);\n  useEffect(function () {\n    if (scrollToFirst) {\n      var _min;\n\n      var firstTop = (_min = min(map(packedEvents, 'top'))) != null ? _min : 0;\n      var initPosition = firstTop - calendarHeight.current / (end - start);\n      var verifiedInitPosition = initPosition < 0 ? 0 : initPosition;\n\n      if (verifiedInitPosition) {\n        setTimeout(function () {\n          var _scrollView$current;\n\n          scrollView == null ? void 0 : (_scrollView$current = scrollView.current) == null ? void 0 : _scrollView$current.scrollTo({\n            y: verifiedInitPosition,\n            animated: true\n          });\n        }, 0);\n      }\n    }\n  }, []);\n\n  var _onEventPress = useCallback(function (eventIndex) {\n    var event = events[eventIndex];\n\n    if (eventTapped) {\n      eventTapped(event);\n    } else {\n      onEventPress == null ? void 0 : onEventPress(event);\n    }\n  }, [events, onEventPress, eventTapped]);\n\n  var renderEvents = function renderEvents() {\n    var events = packedEvents.map(function (event, i) {\n      return _jsx(EventBlock, {\n        index: i,\n        event: event,\n        styles: styles.current,\n        format24h: format24h,\n        onPress: _onEventPress,\n        renderEvent: renderEvent\n      }, i);\n    });\n    return _jsx(View, {\n      children: _jsx(View, {\n        style: {\n          marginLeft: HOURS_SIDEBAR_WIDTH\n        },\n        children: events\n      })\n    });\n  };\n\n  return _jsxs(ScrollView, _objectSpread(_objectSpread({\n    ref: scrollView,\n    contentContainerStyle: [styles.current.contentStyle, {\n      width: dimensionWidth\n    }]\n  }, scrollEvents), {}, {\n    children: [_jsx(TimelineHours, {\n      start: start,\n      end: end,\n      date: date,\n      format24h: format24h,\n      styles: styles.current,\n      onBackgroundLongPress: onBackgroundLongPress,\n      onBackgroundLongPressOut: onBackgroundLongPressOut\n    }), renderEvents(), showNowIndicator && _jsx(NowIndicator, {\n      styles: styles.current\n    })]\n  }));\n};\n\nexport default React.memo(Timeline);","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/node_modules/react-native-calendars/src/timeline/Timeline.js"],"names":["React","useCallback","useEffect","useMemo","useRef","min","map","styleConstructor","HOURS_SIDEBAR_WIDTH","populateEvents","HOUR_BLOCK_HEIGHT","TimelineHours","EventBlock","NowIndicator","useTimelineOffset","Dimensions","get","dimensionWidth","width","Timeline","props","format24h","start","end","date","events","onEventPress","onBackgroundLongPress","onBackgroundLongPressOut","renderEvent","theme","scrollToFirst","showNowIndicator","scrollOffset","onChangeOffset","eventTapped","scrollView","calendarHeight","styles","current","scrollViewRef","scrollEvents","packedEvents","firstTop","initPosition","verifiedInitPosition","setTimeout","scrollTo","y","animated","_onEventPress","eventIndex","event","renderEvents","i","marginLeft","contentStyle","memo"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { View, Dimensions, ScrollView } from 'react-native';\nimport min from 'lodash/min';\nimport map from 'lodash/map';\nimport styleConstructor, { HOURS_SIDEBAR_WIDTH } from './style';\nimport populateEvents, { HOUR_BLOCK_HEIGHT } from './Packer';\nimport TimelineHours from './TimelineHours';\nimport EventBlock from './EventBlock';\nimport NowIndicator from './NowIndicator';\nimport useTimelineOffset from './useTimelineOffset';\nconst { width: dimensionWidth } = Dimensions.get('window');\nconst Timeline = (props) => {\n    const { format24h = true, start = 0, end = 24, date, events = [], onEventPress, onBackgroundLongPress, onBackgroundLongPressOut, renderEvent, theme, scrollToFirst, showNowIndicator, scrollOffset, onChangeOffset, eventTapped } = props;\n    const scrollView = useRef();\n    const calendarHeight = useRef((end - start) * HOUR_BLOCK_HEIGHT);\n    const styles = useRef(styleConstructor(theme || props.styles, calendarHeight.current));\n    const { scrollEvents } = useTimelineOffset({ onChangeOffset, scrollOffset, scrollViewRef: scrollView });\n    const packedEvents = useMemo(() => {\n        const width = dimensionWidth - HOURS_SIDEBAR_WIDTH;\n        return populateEvents(events, width, start);\n    }, [events, start]);\n    useEffect(() => {\n        if (scrollToFirst) {\n            const firstTop = min(map(packedEvents, 'top')) ?? 0;\n            const initPosition = firstTop - calendarHeight.current / (end - start);\n            const verifiedInitPosition = initPosition < 0 ? 0 : initPosition;\n            if (verifiedInitPosition) {\n                setTimeout(() => {\n                    scrollView?.current?.scrollTo({\n                        y: verifiedInitPosition,\n                        animated: true\n                    });\n                }, 0);\n            }\n        }\n    }, []);\n    const _onEventPress = useCallback((eventIndex) => {\n        const event = events[eventIndex];\n        if (eventTapped) {\n            //TODO: remove after deprecation\n            eventTapped(event);\n        }\n        else {\n            onEventPress?.(event);\n        }\n    }, [events, onEventPress, eventTapped]);\n    const renderEvents = () => {\n        const events = packedEvents.map((event, i) => {\n            return (<EventBlock key={i} index={i} event={event} styles={styles.current} format24h={format24h} onPress={_onEventPress} renderEvent={renderEvent}/>);\n        });\n        return (<View>\n        <View style={{ marginLeft: HOURS_SIDEBAR_WIDTH }}>{events}</View>\n      </View>);\n    };\n    return (<ScrollView \n    // @ts-expect-error\n    ref={scrollView} contentContainerStyle={[styles.current.contentStyle, { width: dimensionWidth }]} {...scrollEvents}>\n      <TimelineHours start={start} end={end} date={date} format24h={format24h} styles={styles.current} onBackgroundLongPress={onBackgroundLongPress} onBackgroundLongPressOut={onBackgroundLongPressOut}/>\n      {renderEvents()}\n      {showNowIndicator && <NowIndicator styles={styles.current}/>}\n    </ScrollView>);\n};\nexport default React.memo(Timeline);\n"]},"metadata":{},"sourceType":"module"}