{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Auth } from \"aws-amplify\";\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Day, Exercises, User, Week, ExercisesStorage } from \"../../models\";\nimport _ from \"lodash\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction getTodaysDate() {\n  var next = new Date();\n  return next;\n}\n\nfunction getWeekBegin() {\n  var now = new Date();\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() + (7 - now.getDay()));\n  return next;\n}\n\nvar CalanderScreen = function CalanderScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currUser = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currWeek = _useState6[0],\n      setWeek = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currDay = _useState8[0],\n      setDay = _useState8[1];\n\n  function prevDay() {\n    var next = new Date();\n\n    if (currDay.Date == currWeek.exercisesDays[0].Date) {\n      return;\n    }\n\n    currWeek.exercisesDays.forEach(function (x, idx) {\n      if (x.Date == currDay.Date) {\n        setDay(currWeek.exercisesDays[idx - 1]);\n        return;\n      }\n    });\n  }\n\n  function NextDay() {\n    var next = new Date();\n    currWeek.exercisesDays.forEach(function (x, idx) {\n      if (x.Date == currDay.Date) {\n        setDay(currWeek.exercisesDays[idx + 1]);\n        return;\n      }\n    });\n  }\n\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  function loadData() {\n    var username, user, weekStart, d;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(Auth.Credentials.Auth.user.username);\n            username = Auth.Credentials.Auth.user.username;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 5:\n            user = _context.sent;\n            setUser(user[0]);\n            weekStart = getWeekBegin();\n            d = new Date();\n            user[0].TrainingDayList.forEach(function (x) {\n              var res = x.weekStartDate.localeCompare(weekStart.toDateString());\n\n              if (res == 0) {\n                setWeek(x);\n                x.exercisesDays.forEach(function (y, idx2) {\n                  if (d.getDay() == idx2) {\n                    setDay(y);\n                  }\n                });\n              }\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 15:\n            setLoaded(true);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  ;\n\n  var signOut = function signOut() {\n    Auth.signOut();\n  };\n\n  if (loaded == false) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n\n  console.log(currUser);\n  console.log(currWeek);\n  console.log(currDay);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.topnav,\n      children: [_jsxs(Pressable, {\n        style: styles.topnavLeftArrow,\n        onPress: prevDay,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Previous Day\"\n        })]\n      }), _jsx(Text, {\n        style: styles.navText,\n        children: currDay.Date\n      }), _jsxs(Pressable, {\n        style: styles.topnavRightArrow,\n        onPress: NextDay,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next Day\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.timings,\n          children: \"Welcome Back \"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \"Your Workout today is planned at\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \" (24H)\"\n        })]\n      }), _jsx(Pressable, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Go to Calander\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  topnav: {\n    backgroundColor: '#031b36',\n    paddingVertical: 20,\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  topnavLeftArrow: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'auto',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  topnavRightArrow: {\n    backgroundColor: '#22d3ee',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  navText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  container: {\n    marginTop: 10,\n    backgroundColor: '#0891b2',\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: '100%'\n  },\n  timings: {\n    color: '#fff',\n    fontSize: '25px',\n    alignSelf: 'center'\n  },\n  description: {\n    color: 'white',\n    marginBottom: 5,\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  }\n});\nexport default CalanderScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/CalanderScreen/CalanderScreen.js"],"names":["React","useState","useEffect","Auth","DataStore","Day","Exercises","User","Week","ExercisesStorage","_","useNavigation","useIsFocused","getTodaysDate","next","Date","getWeekBegin","now","getFullYear","getMonth","getDate","getDay","CalanderScreen","navigation","loaded","setLoaded","undefined","currUser","setUser","currWeek","setWeek","currDay","setDay","prevDay","exercisesDays","forEach","x","idx","NextDay","loadData","console","log","Credentials","user","username","query","u","weekStart","d","TrainingDayList","res","weekStartDate","localeCompare","toDateString","y","idx2","signOut","flex","justifyContent","alignItems","styles","topnav","topnavLeftArrow","buttonText","navText","topnavRightArrow","container","timings","description","button","StyleSheet","create","backgroundColor","paddingVertical","width","maxWidth","flexDirection","alignSelf","paddingHorizontal","borderRadius","fontWeight","color","textTransform","fontSize","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {View, Text, TouchableOpacity, Alert, ActivityIndicator,StyleSheet,Pressable} from 'react-native'\r\nimport {Auth} from \"aws-amplify\"\r\n\r\nimport { DataStore } from '@aws-amplify/datastore';\r\nimport { Day, Exercises, User, Week, ExercisesStorage } from '../../models';\r\nimport _ from \"lodash\"\r\n\r\nimport { useNavigation, useIsFocused} from \"@react-navigation/native\";\r\n\r\n\r\nfunction getTodaysDate() {\r\n  var next = new Date();\r\n  return next;\r\n}\r\n\r\nfunction getWeekBegin() {\r\n  var now = new Date();\r\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate()+(7 - now.getDay()));\r\n  return next;\r\n}\r\n\r\n\r\nconst CalanderScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currUser, setUser]= useState(undefined)\r\n    const [currWeek, setWeek]= useState(undefined)\r\n    const [currDay, setDay]= useState(undefined)\r\n\r\n\r\n\r\n    \r\n  function prevDay() {\r\n    var next = new Date();\r\n    if (currDay.Date == currWeek.exercisesDays[0].Date) {\r\n      return;\r\n    }\r\n    currWeek.exercisesDays.forEach((x,idx)=> {\r\n\r\n      if (x.Date == currDay.Date) {\r\n        setDay(currWeek.exercisesDays[idx-1])\r\n        return;\r\n      }\r\n\r\n    })\r\n \r\n  }\r\n\r\n\r\n  function NextDay() {\r\n    var next = new Date();\r\n\r\n    currWeek.exercisesDays.forEach((x,idx)=> {\r\n\r\n      if (x.Date == currDay.Date) {\r\n        setDay(currWeek.exercisesDays[idx+1])\r\n        return;\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    } , [])\r\n    \r\n    async function loadData() {\r\n      try {\r\n          console.log(Auth.Credentials.Auth.user.username);\r\n          const username = Auth.Credentials.Auth.user.username;\r\n          let user = await DataStore.query(User,  u => u.username(\"eq\", username))\r\n          setUser(user[0])\r\n\r\n          let weekStart = getWeekBegin();\r\n          const d = new Date();\r\n          user[0].TrainingDayList.forEach((x) => {\r\n              let res = x.weekStartDate.localeCompare(weekStart.toDateString())\r\n              if (res == 0) {\r\n                  setWeek(x)\r\n                  x.exercisesDays.forEach((y,idx2) => {\r\n                      if (d.getDay() == idx2) {\r\n                          setDay(y)\r\n                      }\r\n                  })\r\n              }\r\n          })\r\n\r\n      } catch (err) {console.log(err)}\r\n\r\n        setLoaded(true)\r\n\r\n     };\r\n\r\n\r\n\r\n    const signOut = ()=> {\r\n        Auth.signOut()\r\n    }\r\n\r\n\r\n\r\n\r\n      if (loaded == false) {\r\n          return(\r\n          <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator></ActivityIndicator>\r\n          </View>)\r\n      }\r\n      console.log(currUser)\r\n      console.log(currWeek)\r\n      console.log(currDay)\r\n    return (\r\n        \r\n       <>\r\n        <View style={styles.topnav}>\r\n \r\n        <Pressable style={styles.topnavLeftArrow} onPress={prevDay}> <Text style={styles.buttonText}>Previous Day</Text></Pressable>    \r\n        <Text style={styles.navText}>{currDay.Date}</Text> \r\n        <Pressable style={styles.topnavRightArrow} onPress={NextDay}> <Text style={styles.buttonText}>Next Day</Text></Pressable>\r\n\r\n\r\n        </View>\r\n        <View style={styles.container}>\r\n          \r\n        <View>\r\n            <Text style={styles.timings}>Welcome Back {}</Text>\r\n                <Text style={styles.description}>Your Workout today is planned at</Text>\r\n                <Text style={styles.description}>{} (24H)</Text>\r\n          </View>\r\n              <Pressable style={styles.button}>\r\n                <Text style={styles.buttonText}>Go to Calander</Text>\r\n              </Pressable>\r\n        </View>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  topnav: {\r\n    backgroundColor: '#031b36',\r\n    paddingVertical: 20,\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    flexDirection:\"row\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"space-between\"\r\n  },\r\n  topnavLeftArrow: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'auto',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  topnavRightArrow: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  navText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 20,\r\n\r\n    alignSelf:\"center\"\r\n\r\n  },\r\n  container: {\r\n    marginTop: 10,\r\n    backgroundColor: '#0891b2',\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    alignSelf: 'center',\r\n    width: '90%',\r\n    maxWidth: '100%',\r\n    \r\n  },\r\n  timings: {\r\n    color: '#fff',\r\n    fontSize: '25px',\r\n    alignSelf: 'center'\r\n  },\r\n  description: {\r\n    color: 'white',\r\n    marginBottom: 5,\r\n    fontSize: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nexport default CalanderScreen;"]},"metadata":{},"sourceType":"module"}