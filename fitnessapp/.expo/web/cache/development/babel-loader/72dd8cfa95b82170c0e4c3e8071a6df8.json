{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport CustomInput from \"../../componets/CustomInput\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport SocialSignInButtons from \"../../componets/SocialSignInButtons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Auth } from 'aws-amplify';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RestPassWordScreen = function RestPassWordScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      code = _useState4[0],\n      setcode = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPassword = _useState6[0],\n      setNewPassword = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var onSubmitPressed = function onSubmitPressed() {\n    var response;\n    return _regeneratorRuntime.async(function onSubmitPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Auth.forgotPasswordSubmit(username, code, newPassword));\n\n          case 3:\n            response = _context.sent;\n            navigation.navigate('SignIn');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"Oops\", e.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('SignIn');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: [styles.title],\n        children: \"Rest your password\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Username\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        placeholder: \"Code\",\n        value: code,\n        setValue: setcode\n      }), _jsx(CustomInput, {\n        placeholder: \"Enter your new Password\",\n        value: newPassword,\n        setValue: setNewPassword\n      }), _jsx(CustomButton, {\n        text: \"Submit\",\n        onPress: onSubmitPressed\n      }), _jsx(CustomButton, {\n        text: \"Back to Sign in\",\n        onPress: onSignInPressed,\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  },\n  text: {\n    color: 'gray',\n    marginVertical: 10\n  },\n  link: {\n    color: '#FDB075'\n  }\n});\nexport default RestPassWordScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/RestPassWordScreen/RestPassWordScreen.js"],"names":["React","useState","CustomInput","CustomButton","SocialSignInButtons","useNavigation","Auth","RestPassWordScreen","username","setUsername","code","setcode","newPassword","setNewPassword","navigation","onSubmitPressed","forgotPasswordSubmit","response","navigate","Alert","alert","e","message","onSignInPressed","styles","root","title","StyleSheet","create","alignItems","padding","fontSize","fontWeight","color","margin","text","marginVertical","link"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {View, Text, StyleSheet, ScrollView,Alert} from 'react-native'\r\n\r\nimport CustomInput from \"../../componets/CustomInput\";\r\nimport CustomButton from \"../../componets/CustomButton\";\r\nimport SocialSignInButtons from \"../../componets/SocialSignInButtons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {Auth} from 'aws-amplify'\r\nconst RestPassWordScreen = () => {\r\n\r\nconst [username, setUsername] = useState('');\r\nconst [code, setcode] = useState('');\r\nconst [newPassword, setNewPassword] = useState('');\r\nconst navigation = useNavigation();\r\nconst onSubmitPressed = async() => {\r\n\r\n    try {\r\n        const response = await Auth.forgotPasswordSubmit(username,code,newPassword);\r\n        navigation.navigate('SignIn');\r\n\r\n    }\r\n    catch{\r\n        Alert.alert(\"Oops\", e.message);        \r\n    }\r\n}\r\n\r\nconst onSignInPressed = () => {\r\n    navigation.navigate('SignIn');\r\n\r\n}\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.root}>\r\n\r\n            <Text style={[styles.title]}>Rest your password</Text>\r\n            <CustomInput placeholder=\"Username\" value={username} setValue={setUsername}/>\r\n            <CustomInput placeholder=\"Code\" value={code} setValue={setcode}/>\r\n            <CustomInput placeholder=\"Enter your new Password\" value={newPassword} setValue={setNewPassword}/>\r\n\r\n            <CustomButton text=\"Submit\" onPress={onSubmitPressed}/>\r\n\r\n            <CustomButton text=\"Back to Sign in\" onPress={onSignInPressed} type='TERTIARY'/>\r\n\r\n        </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root:{\r\n        alignItems: 'center',\r\n        padding:20,\r\n    },\r\n    title: {\r\n        fontSize:24,\r\n        fontWeight:'bold',\r\n        color:'#051C60',\r\n        margin:10,\r\n    },\r\n    text:{\r\n        color:'gray',\r\n        marginVertical:10,\r\n    },\r\n    link:{\r\n        color:'#FDB075',\r\n\r\n    }\r\n})\r\nexport default RestPassWordScreen;"]},"metadata":{},"sourceType":"module"}