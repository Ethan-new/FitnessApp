{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Logo from \"../../../assets/images/logo.png\";\nimport CustomInput from \"../../componets/CustomInput\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport SocialSignInButtons from \"../../componets/SocialSignInButtons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Auth } from \"aws-amplify\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      height = _useWindowDimensions.height;\n\n  var navigation = useNavigation();\n\n  var onSignInPressed = function onSignInPressed(data) {\n    var response;\n    return _regeneratorRuntime.async(function onSignInPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n          case 6:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            Alert.alert('Oops', _context.t0.message);\n\n          case 13:\n            setLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var onForgotPasswordPressed = function onForgotPasswordPressed() {\n    navigation.navigate('ForgotPassWord');\n  };\n\n  var onCreateAccountPressed = function onCreateAccountPressed() {\n    navigation.navigate('SignUp');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Image, {\n        source: Logo,\n        style: [styles.logo, {\n          height: height * 0.3\n        }],\n        resizeMode: \"contain\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Username\",\n        value: username,\n        setValue: setUsername\n      }), _jsx(CustomInput, {\n        placeholder: \"Password\",\n        value: password,\n        setValue: setPassword,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        text: loading ? \"Loading... \" : \"Sign In\",\n        onPress: onSignInPressed\n      }), _jsx(CustomButton, {\n        text: \"Forgot password?\",\n        onPress: onForgotPasswordPressed,\n        type: \"TERTIARY\"\n      }), _jsx(SocialSignInButtons, {}), _jsx(CustomButton, {\n        text: \"Don't have an account? Create One.\",\n        onPress: onCreateAccountPressed,\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20\n  },\n  logo: {\n    width: '70%',\n    maxWidth: 300,\n    maxHeight: 300\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/SignInScreen/SigninScreen.js"],"names":["React","useState","Logo","CustomInput","CustomButton","SocialSignInButtons","useNavigation","Auth","SignInScreen","username","setUsername","password","setPassword","loading","setLoading","useWindowDimensions","height","navigation","onSignInPressed","data","signIn","response","console","log","Alert","alert","message","onForgotPasswordPressed","navigate","onCreateAccountPressed","styles","root","logo","StyleSheet","create","alignItems","padding","width","maxWidth","maxHeight"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {View, Text, Image, StyleSheet, useWindowDimensions, ScrollView, Alert} from 'react-native'\r\nimport Logo from '../../../assets/images/logo.png'\r\nimport CustomInput from \"../../componets/CustomInput\";\r\nimport CustomButton from \"../../componets/CustomButton\";\r\nimport SocialSignInButtons from \"../../componets/SocialSignInButtons\";\r\n\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Auth } from \"aws-amplify\";\r\nconst SignInScreen = () => {\r\nconst [username, setUsername] = useState('');\r\nconst [password, setPassword] = useState('');\r\nconst [loading,setLoading] = useState(false);\r\n\r\n    const {height} = useWindowDimensions();\r\n    const navigation = useNavigation();\r\n    \r\nconst onSignInPressed = async (data) => {\r\n    if (loading) {\r\n        return;\r\n    }\r\n\r\n    setLoading(true);\r\ntry {\r\n    const response = await Auth.signIn(username, password)\r\n    console.log(response)\r\n\r\n} catch(e) {\r\n    Alert.alert('Oops', e.message);\r\n}\r\nsetLoading(false);\r\n\r\n    //navigation.navigate('Home');\r\n}\r\nconst onForgotPasswordPressed = () => {\r\n    navigation.navigate('ForgotPassWord');\r\n}\r\n\r\nconst onCreateAccountPressed = () => {\r\n    navigation.navigate('SignUp');\r\n}\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.root}>\r\n            <Image source={Logo} style={[styles.logo, {height: height *0.3}]} resizeMode=\"contain\"/>\r\n            <CustomInput placeholder=\"Username\" value={username} setValue={setUsername}/>\r\n            <CustomInput placeholder=\"Password\" value={password} setValue={setPassword} secureTextEntry={true}/>\r\n            <CustomButton text={loading ? \"Loading... \" : \"Sign In\"} onPress={onSignInPressed}/>\r\n            <CustomButton text=\"Forgot password?\" onPress={onForgotPasswordPressed} type='TERTIARY'/>\r\n\r\n            <SocialSignInButtons/>\r\n            <CustomButton text=\"Don't have an account? Create One.\" onPress={onCreateAccountPressed} type='TERTIARY'/>\r\n        </View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root:{\r\n        alignItems: 'center',\r\n        padding:20,\r\n    },\r\n    logo: {\r\n        width: '70%',\r\n        maxWidth:300,\r\n        maxHeight:300,\r\n    }\r\n})\r\nexport default SignInScreen;"]},"metadata":{},"sourceType":"module"}