{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Auth } from \"aws-amplify\";\nimport moment, { months } from \"moment\";\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Day, Exercises, User, Week, ExercisesStorage, CalDays, Cals, DailyFoodItems } from \"../../models\";\nimport _ from \"lodash\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport { FoodItems } from \"../../models\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction getTodaysDate() {\n  var next = new Date();\n  return next;\n}\n\nfunction getWeekBegin() {\n  var now = new Date();\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  return next;\n}\n\nvar ViewScreen = function ViewScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currUser = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userInput = _useState6[0],\n      setUserInput = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userInputQua = _useState8[0],\n      setUserInputQua = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      allFood = _useState10[0],\n      setAllFood = _useState10[1];\n\n  var GoToHome = function GoToHome() {\n    navigation.navigate('Home');\n  };\n\n  var IsFocused = useIsFocused();\n  useEffect(function () {\n    loadData();\n  }, [IsFocused]);\n\n  function prevDay() {}\n\n  function NextDay() {}\n\n  function loadData() {\n    var username, user, allfood, today;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            username = Auth.Credentials.Auth.user.username;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 4:\n            user = _context.sent;\n            setUser(user[0]);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(DataStore.query(FoodItems));\n\n          case 8:\n            allfood = _context.sent;\n            setAllFood(allfood);\n            today = new Date();\n            user[0].CalCount.allDays.forEach(function (x) {\n              if (x.Date.slice(0, 16) === today.toString().slice(0, 16)) {\n                setCurrDate(x);\n              }\n            });\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n            setLoaded(true);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  ;\n\n  if (loaded == false) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n\n  console.log(\"---------\");\n  console.log(currUser);\n  console.log(currDate);\n  console.log(allFood);\n  console.log(currFood);\n  console.log(\"---------\");\n  var now = new Date();\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.topnav,\n      children: [_jsxs(Pressable, {\n        style: styles.topnavLeftArrow,\n        onPress: prevDay,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Previous Day\"\n        })]\n      }), _jsx(Text, {\n        style: styles.navText,\n        children: moment(next).format('ddd MMM D')\n      }), _jsxs(Pressable, {\n        style: styles.topnavRightArrow,\n        onPress: NextDay,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next Day\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.timings,\n          children: [\"You have eaten \", currDate.currCals, \" \"]\n        }), _jsx(Text, {\n          style: styles.timings,\n          children: \"calories today \"\n        }), _jsxs(Text, {\n          style: styles.timings,\n          children: [currDate.goalCals - currDate.currCals, \" more to go!\"]\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(t) {\n            return setUserInput(t);\n          },\n          value: userInput || \"\",\n          placeholder: \"Item Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(t) {\n            return setUserInputQua(t);\n          },\n          value: userInputQua || \"\",\n          placeholder: \"Item Quantity\"\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: addItem,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add Item To Today\"\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.timings,\n          children: \"All Items Eaten Today\"\n        }), currFood.map(function (x, idx) {\n          return _jsxs(Text, {\n            style: styles.description,\n            children: [x.weight, \" \", x.name, \" for a total of \", x.calCount, \" cals\"]\n          }, idx);\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.botnav,\n      children: _jsxs(Pressable, {\n        style: styles.HomeButton,\n        onPress: GoToHome,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Home\"\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  botnav: {\n    backgroundColor: '#031b36',\n    justifyContent: \"flex-end\",\n    paddingVertical: 20,\n    width: '100%',\n    maxWidth: '100%',\n    alignItems: \"center\",\n    flex: 1\n  },\n  HomeButton: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'auto',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '45%'\n  },\n  topnav: {\n    backgroundColor: '#031b36',\n    paddingVertical: 20,\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  topnavLeftArrow: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'auto',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  topnavRightArrow: {\n    backgroundColor: '#22d3ee',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  navText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 20,\n    alignSelf: \"center\"\n  },\n  container: {\n    marginTop: 10,\n    backgroundColor: '#1f9c4d',\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: '100%'\n  },\n  timings: {\n    color: '#fff',\n    fontSize: '25px',\n    alignSelf: 'center'\n  },\n  description: {\n    color: 'white',\n    marginBottom: 5,\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default ViewScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/ViewScreen/ViewScreen.js"],"names":["React","useState","useEffect","Auth","moment","months","DataStore","Day","Exercises","User","Week","ExercisesStorage","CalDays","Cals","DailyFoodItems","_","useNavigation","useIsFocused","FoodItems","getTodaysDate","next","Date","getWeekBegin","now","getFullYear","getMonth","getDate","getDay","ViewScreen","navigation","loaded","setLoaded","undefined","currUser","setUser","userInput","setUserInput","userInputQua","setUserInputQua","allFood","setAllFood","GoToHome","navigate","IsFocused","loadData","prevDay","NextDay","username","Credentials","user","query","u","allfood","today","CalCount","allDays","forEach","x","slice","toString","setCurrDate","console","log","flex","justifyContent","alignItems","currDate","currFood","styles","topnav","topnavLeftArrow","buttonText","navText","format","topnavRightArrow","container","timings","currCals","goalCals","input","t","button","addItem","map","idx","description","weight","name","calCount","botnav","HomeButton","StyleSheet","create","backgroundColor","paddingVertical","width","maxWidth","alignSelf","paddingHorizontal","borderRadius","flexDirection","fontWeight","color","textTransform","fontSize","marginTop","marginBottom","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {View, Text, TouchableOpacity, Alert, ActivityIndicator,StyleSheet,Pressable, TextInput} from 'react-native'\r\nimport {Auth} from \"aws-amplify\"\r\n\r\nimport moment, { months } from \"moment\";\r\nimport { DataStore } from '@aws-amplify/datastore';\r\nimport { Day, Exercises, User, Week, ExercisesStorage, CalDays, Cals, DailyFoodItems } from '../../models';\r\nimport _ from \"lodash\"\r\n\r\nimport { useNavigation, useIsFocused} from \"@react-navigation/native\";\r\nimport { FoodItems } from \"../../models\";\r\n\r\n\r\nfunction getTodaysDate() {\r\n  var next = new Date();\r\n  return next;\r\n}\r\n\r\nfunction getWeekBegin() {\r\n  var now = new Date();\r\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\r\n  return next;\r\n}\r\n\r\n\r\nconst ViewScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currUser, setUser]= useState(undefined)\r\n    const [userInput, setUserInput]= useState(null)\r\n    const [userInputQua, setUserInputQua]= useState(null)\r\n    const [allFood, setAllFood]= useState(null)\r\n\r\n  const GoToHome =  ()=> {\r\n    \r\n    navigation.navigate('Home');\r\n}\r\n    \r\n\r\n  const IsFocused = useIsFocused()\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    } , [IsFocused])\r\n    \r\n    function prevDay() {\r\n\r\n    }\r\n  \r\n  \r\n    function NextDay() {\r\n\r\n  \r\n    }\r\n\r\n    async function loadData() {\r\n      try {\r\n\r\n          const username = Auth.Credentials.Auth.user.username;\r\n          let user = await DataStore.query(User,  u => u.username(\"eq\", username))\r\n          setUser(user[0])\r\n          \r\n          let allfood = await DataStore.query(FoodItems)\r\n          setAllFood(allfood)\r\n\r\n          const today = new Date()\r\n\r\n          \r\n          /*\r\n          user[0].CalCount.allDays.forEach ((x)=> {\r\n            if (x.Date.slice(0,16) === today.toString().slice(0,16)) {\r\n              setCurrDate(x)\r\n            }\r\n          })\r\n\r\n\r\n            console.log(\"made new day\")\r\n\r\n              const newDayToAdd = new CalDays({\r\n              \"Date\": today.toString(),\r\n              \"currCals\": \"0\",\r\n              \"foodItems\": [],\r\n              \"goalCals\": \"2000\"\r\n            })\r\n            const deepCopyWithLodashCloneDeep =[]\r\n \r\n            deepCopyWithLodashCloneDeep.push(newDayToAdd)\r\n\r\n            const newCals = new Cals({\r\n              \"currTargetCals\": \"2000\",\r\n              \"allDays\": newDayToAdd,\r\n            })\r\n            console.log(newCals)\r\n            console.log(\"newCals\")\r\n            DataStore.save(\r\n              User.copyOf(user[0], updated => {\r\n              updated.CalCount = newCals;\r\n              })\r\n          )\r\n          */\r\n          \r\n          \r\n          user[0].CalCount.allDays.forEach ((x)=> {\r\n            if (x.Date.slice(0,16) === today.toString().slice(0,16)) {\r\n              setCurrDate(x)\r\n            }\r\n          })\r\n          \r\n      } catch (err) {console.log(err)}\r\n\r\n        setLoaded(true)\r\n\r\n     };\r\n\r\n\r\n\r\n      if (loaded == false) {\r\n        \r\n          return(\r\n          <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator></ActivityIndicator>\r\n          </View>)\r\n      }\r\n      console.log(\"---------\")\r\n      console.log(currUser)\r\n      console.log(currDate)\r\n      console.log(allFood)\r\n      console.log(currFood)\r\n      console.log(\"---------\")\r\n      var now = new Date();\r\n      var next = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n    return (\r\n        \r\n       <>\r\n\r\n          <View style={styles.topnav}>\r\n          \r\n          <Pressable style={styles.topnavLeftArrow} onPress={prevDay}> <Text style={styles.buttonText}>Previous Day</Text></Pressable>    \r\n          <Text style={styles.navText}>{moment(next).format('ddd MMM D')}</Text> \r\n          <Pressable style={styles.topnavRightArrow} onPress={NextDay}> <Text style={styles.buttonText}>Next Day</Text></Pressable>\r\n          </View>\r\n          <View style={styles.container}>\r\n            <View>\r\n              <Text style={styles.timings}>You have eaten {currDate.currCals} </Text>\r\n              <Text style={styles.timings}>calories today </Text>\r\n              <Text style={styles.timings}>{currDate.goalCals - currDate.currCals} more to go!</Text>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.container}>\r\n            <View>\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={t => setUserInput(t)}\r\n                value={userInput || \"\"}\r\n                placeholder=\"Item Name\"\r\n                />\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={t => setUserInputQua(t)}\r\n                value={userInputQua || \"\"}\r\n                placeholder=\"Item Quantity\"\r\n                />\r\n                  <Pressable style={styles.button} onPress={addItem}>\r\n                    <Text style={styles.buttonText}>Add Item To Today</Text>\r\n                  </Pressable>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.container}>\r\n            <View>\r\n              <Text style={styles.timings}>All Items Eaten Today</Text>\r\n              \r\n              {currFood.map((x,idx) => {\r\n                \r\n                return <Text style={styles.description} key={idx}>{x.weight} {x.name} for a total of {x.calCount} cals</Text>\r\n\r\n              })}\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.botnav}>\r\n            <Pressable style={styles.HomeButton} onPress={GoToHome}> <Text style={styles.buttonText}>Home</Text></Pressable>    \r\n          </View>\r\n       </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  botnav: {\r\n    backgroundColor: '#031b36',\r\n    justifyContent:\"flex-end\",\r\n    paddingVertical: 20,\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    alignItems:\"center\",\r\n    flex:1\r\n  },\r\n  HomeButton: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'auto',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '45%',\r\n\r\n  },\r\n  topnav: {\r\n    backgroundColor: '#031b36',\r\n    paddingVertical: 20,\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    flexDirection:\"row\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"space-between\"\r\n  },\r\n  topnavLeftArrow: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'auto',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  topnavRightArrow: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  navText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 20,\r\n\r\n    alignSelf:\"center\"\r\n\r\n  },\r\n  container: {\r\n    marginTop: 10,\r\n    backgroundColor: '#1f9c4d',\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    alignSelf: 'center',\r\n    width: '90%',\r\n    maxWidth: '100%',\r\n    \r\n  },\r\n  timings: {\r\n    color: '#fff',\r\n    fontSize: '25px',\r\n    alignSelf: 'center'\r\n  },\r\n  description: {\r\n    color: 'white',\r\n    marginBottom: 5,\r\n    fontSize: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 14\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n\r\n  },\r\n});\r\nexport default ViewScreen;"]},"metadata":{},"sourceType":"module"}