{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Auth } from \"aws-amplify\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Day, Exercises, User, Week, ExercisesStorage } from \"../../models\";\nimport _ from \"lodash\";\nimport moment, { months } from \"moment\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport CustomButton from \"../../componets/CustomButton\";\nimport RnIncrementDecrementBtn from 'react-native-increment-decrement-button';\nimport RadioGroup from 'react-native-radio-buttons-group';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar radioButtonsData = [{\n  id: '1',\n  label: 'Sunday',\n  value: 'option1'\n}, {\n  id: '2',\n  label: 'Monday',\n  value: 'option2'\n}, {\n  id: '3',\n  label: 'Tuesday',\n  value: 'option2'\n}, {\n  id: '4',\n  label: 'Wednesday',\n  value: 'option2'\n}, {\n  id: '5',\n  label: 'Thursday',\n  value: 'option2'\n}, {\n  id: '6',\n  label: 'Friday',\n  value: 'option2'\n}, {\n  id: '7',\n  label: 'Saturday',\n  value: 'option2'\n}];\nvar currUser;\nvar time = 12;\n\nvar ModifyScreen = function ModifyScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(radioButtonsData),\n      _useState2 = _slicedToArray(_useState, 2),\n      radioButtons = _useState2[0],\n      setRadioButtons = _useState2[1];\n\n  function onPressRadioButton(radioButtonsArray) {\n    setRadioButtons(radioButtonsArray);\n  }\n\n  var loadData = function loadData() {\n    var username;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(Auth.Credentials.Auth.user.username);\n            username = Auth.Credentials.Auth.user.username;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 4:\n            currUser = _context.sent;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  loadData();\n\n  var signOut = function signOut() {\n    Auth.signOut();\n  };\n\n  var GoCalScreen = function GoCalScreen() {\n    navigation.navigate('CalanderScreen');\n  };\n\n  var ChangeSchedule = function ChangeSchedule() {\n    var temp, weekStart;\n    return _regeneratorRuntime.async(function ChangeSchedule$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            temp = 10;\n            radioButtons.forEach(function (x, idx) {\n              if (x.selected == true) {\n                temp = idx;\n              }\n            });\n\n            if (!(temp == 10)) {\n              _context2.next = 5;\n              break;\n            }\n\n            Alert(\"Please choose a Day\");\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            weekStart = getWeekBegin();\n            currUser[0].TrainingDayList.forEach(function (x, idx1) {\n              var res = x.weekStartDate.localeCompare(weekStart.toDateString());\n\n              if (res == 0) {\n                x.exercisesDays.forEach(function (y, idx2) {\n                  if (temp == idx2) {\n                    var deepCopyWithLodashCloneDeep = _.cloneDeep(currUser[0].TrainingDayList[idx1].exercisesDays);\n\n                    deepCopyWithLodashCloneDeep;\n                    deepCopyWithLodashCloneDeep[idx2].startTime = time;\n                    DataStore.save(User.copyOf(currUser[0], function (updated) {\n                      updated.TrainingDayList[idx1].exercisesDays = deepCopyWithLodashCloneDeep;\n                    }));\n                  }\n                });\n              }\n            });\n            alert(\"Day Time Changed\");\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function getWeekBegin() {\n    var now = new Date();\n    var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n    console.log(next);\n    return next;\n  }\n\n  var ReGenerateDay = function ReGenerateDay() {\n    var temp, exercisesDB, weekStart;\n    return _regeneratorRuntime.async(function ReGenerateDay$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            temp = 10;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(DataStore.query(ExercisesStorage));\n\n          case 4:\n            exercisesDB = _context3.sent;\n            radioButtons.forEach(function (x, idx) {\n              if (x.selected == true) {\n                temp = idx;\n              }\n            });\n\n            if (!(temp == 10)) {\n              _context3.next = 10;\n              break;\n            }\n\n            Alert(\"Please choose a Day\");\n            alert(\"Please choose a Day\");\n            return _context3.abrupt(\"return\");\n\n          case 10:\n            weekStart = getWeekBegin();\n            currUser[0].TrainingDayList.forEach(function (x, idx1) {\n              var res = x.weekStartDate.localeCompare(weekStart.toDateString());\n\n              if (res == 0) {\n                x.exercisesDays.forEach(function (y, idx2) {\n                  if (temp == idx2) {\n                    var deepCopyWithLodashCloneDeep = _.cloneDeep(currUser[0].TrainingDayList[idx1].exercisesDays);\n\n                    deepCopyWithLodashCloneDeep;\n                    var dailyExercises = [];\n                    var selectExercises = [];\n\n                    var _loop = function _loop() {\n                      alreadyAdd = false;\n                      var value = exercisesDB[Math.floor(Math.random() * exercisesDB.length)];\n                      selectExercises.forEach(function (x) {\n                        if (value.name == x.name) {\n                          alreadyAdd = true;\n                        }\n                      });\n\n                      if (alreadyAdd == true) {\n                        i = i - 1;\n                      } else {\n                        selectExercises.push(value);\n                        var exercisesGened = new Exercises({\n                          \"name\": value.name,\n                          \"videolink\": \"\",\n                          \"numberOfReps\": value.numberOfReps,\n                          \"sets\": value.sets\n                        });\n                        dailyExercises.push(exercisesGened);\n                      }\n                    };\n\n                    for (var i = 0; i < 5; i++) {\n                      var alreadyAdd;\n\n                      _loop();\n                    }\n\n                    deepCopyWithLodashCloneDeep[idx2].exercises = dailyExercises;\n                    console.log(deepCopyWithLodashCloneDeep[idx2].exercises);\n                    DataStore.save(User.copyOf(currUser[0], function (updated) {\n                      updated.TrainingDayList[idx1].exercisesDays = deepCopyWithLodashCloneDeep;\n                    }));\n                  }\n                });\n              }\n            });\n            alert(\"Day Generated Again With New Exercises\");\n            _context3.next = 18;\n            break;\n\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var GenerateWeek = function GenerateWeek() {\n    var weekStart, username, user, exercisesDB, days, x, dailyExercises, selectExercises, _loop2, i, alreadyAdd, dayOfWorkout, m, dayGened, tempWeek, deepCopyWithLodashCloneDeep;\n\n    return _regeneratorRuntime.async(function GenerateWeek$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            weekStart = getWeekBegin();\n            username = Auth.Credentials.Auth.user.username;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 5:\n            user = _context4.sent;\n\n            if (!(user == undefined)) {\n              _context4.next = 9;\n              break;\n            }\n\n            Alert.alert(\"Next weeks schedule has already been made!\");\n            throw console.error(\"Week Already Made\");\n\n          case 9:\n            user[0].TrainingDayList.forEach(function (x) {\n              var res = x.weekStartDate.localeCompare(weekStart.toDateString());\n\n              if (res == 0) {\n                Alert.alert(\"Next weeks schedule has already been made!\");\n                throw console.error(\"Week Already Made\");\n              }\n            });\n            _context4.next = 12;\n            return _regeneratorRuntime.awrap(DataStore.query(ExercisesStorage));\n\n          case 12:\n            exercisesDB = _context4.sent;\n            days = [];\n\n            for (x = 0; x < 7; x++) {\n              dailyExercises = [];\n              selectExercises = [];\n\n              _loop2 = function _loop2() {\n                alreadyAdd = false;\n                var value = exercisesDB[Math.floor(Math.random() * exercisesDB.length)];\n                selectExercises.forEach(function (x) {\n                  if (value.name == x.name) {\n                    alreadyAdd = true;\n                  }\n                });\n\n                if (alreadyAdd == true) {\n                  i = i - 1;\n                } else {\n                  selectExercises.push(value);\n                  var exercisesGened = new Exercises({\n                    \"name\": value.name,\n                    \"videolink\": \"\",\n                    \"numberOfReps\": value.numberOfReps,\n                    \"sets\": value.sets\n                  });\n                  dailyExercises.push(exercisesGened);\n                }\n              };\n\n              for (i = 0; i < 5; i++) {\n                _loop2();\n              }\n\n              dayOfWorkout = getWeekBegin();\n              dayOfWorkout.setDate(dayOfWorkout.getDate() + x);\n              m = moment(dayOfWorkout).format('YYYY-MM-DD');\n              dayGened = new Day({\n                \"Date\": m,\n                \"startTime\": \"1\",\n                \"endTime\": \"11\",\n                \"exercises\": dailyExercises\n              });\n              days.push(dayGened);\n            }\n\n            tempWeek = new Week({\n              \"weekStartDate\": weekStart.toDateString(),\n              \"exercisesDays\": days\n            });\n            deepCopyWithLodashCloneDeep = _.cloneDeep(user[0].TrainingDayList);\n            deepCopyWithLodashCloneDeep.push(tempWeek);\n            currUser = deepCopyWithLodashCloneDeep;\n            _context4.next = 21;\n            return _regeneratorRuntime.awrap(DataStore.save(User.copyOf(user[0], function (updated) {\n              updated.TrainingDayList = deepCopyWithLodashCloneDeep;\n            })));\n\n          case 21:\n            _context4.next = 26;\n            break;\n\n          case 23:\n            _context4.prev = 23;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 26:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 23]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(Text, {\n      style: [styles.title],\n      children: \"Change Next Weeks Schedule\"\n    }), _jsx(Text, {\n      style: [styles.subtitle],\n      children: \"Select a Day\"\n    }), _jsx(RadioGroup, {\n      radioButtons: radioButtons,\n      onPress: onPressRadioButton,\n      layout: \"column\"\n    }), _jsx(Text, {\n      style: [styles.subtitle],\n      children: \"Select a New Time\"\n    }), _jsx(RnIncrementDecrementBtn, {\n      minVal: 0,\n      minreq: 0,\n      max: 24,\n      val: 12,\n      styleBtn: {\n        width: 100,\n        height: 100,\n        backgroundColor: '#3B71F3',\n        color: 'white'\n      },\n      styleTextInput: {\n        width: 100,\n        height: 100,\n        backgroundColor: '#3B71F3'\n      },\n      labelStyle: {\n        fontSize: 25,\n        color: 'white'\n      },\n      handleClick: function handleClick(number) {\n        time = number;\n      }\n    }), _jsxs(View, {\n      style: styles.temp,\n      children: [_jsx(CustomButton, {\n        onPress: ChangeSchedule,\n        text: \"Confirm Change\"\n      }), _jsx(CustomButton, {\n        onPress: ReGenerateDay,\n        text: \"Generate Day Again\"\n      }), _jsx(CustomButton, {\n        onPress: GenerateWeek,\n        text: \"Generate Next Weeks Schedule\"\n      }), _jsx(CustomButton, {\n        onPress: GoCalScreen,\n        text: \"Go Back\"\n      }), _jsx(CustomButton, {\n        onPress: signOut,\n        text: \"Sign Out\",\n        bgColor: \"#E3242B\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    flex: 1\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  },\n  subtitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  }\n});\nexport default ModifyScreen;","map":{"version":3,"sources":["C:/Users/spart/Documents/GitHub/FitnessApp/fitnessapp/src/screens/ModifyScreen/ModifyScreen.js"],"names":["React","useState","useEffect","Auth","Calendar","CalendarList","Agenda","DataStore","Day","Exercises","User","Week","ExercisesStorage","_","moment","months","useNavigation","CustomButton","RnIncrementDecrementBtn","RadioGroup","radioButtonsData","id","label","value","currUser","time","ModifyScreen","navigation","radioButtons","setRadioButtons","onPressRadioButton","radioButtonsArray","loadData","console","log","Credentials","user","username","query","u","signOut","GoCalScreen","navigate","ChangeSchedule","temp","forEach","x","idx","selected","Alert","weekStart","getWeekBegin","TrainingDayList","idx1","res","weekStartDate","localeCompare","toDateString","exercisesDays","y","idx2","deepCopyWithLodashCloneDeep","cloneDeep","startTime","save","copyOf","updated","alert","now","Date","next","getFullYear","getMonth","getDate","getDay","ReGenerateDay","exercisesDB","dailyExercises","selectExercises","alreadyAdd","Math","floor","random","length","name","i","push","exercisesGened","numberOfReps","sets","exercises","GenerateWeek","undefined","error","days","dayOfWorkout","setDate","m","format","dayGened","tempWeek","styles","root","title","subtitle","width","height","backgroundColor","color","fontSize","number","StyleSheet","create","alignItems","padding","flex","fontWeight","margin"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {View, Text, TouchableOpacity, Alert, ActivityIndicator, StyleSheet} from 'react-native'\r\nimport {Auth} from \"aws-amplify\"\r\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\r\nimport { DataStore } from '@aws-amplify/datastore';\r\nimport { Day, Exercises, User, Week, ExercisesStorage } from '../../models';\r\nimport _ from \"lodash\"\r\nimport moment, { months } from \"moment\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nimport CustomButton from \"../../componets/CustomButton\";\r\nimport RnIncrementDecrementBtn  from 'react-native-increment-decrement-button';\r\nimport RadioGroup from 'react-native-radio-buttons-group';\r\n\r\nconst radioButtonsData = [{\r\n    id: '1', // acts as primary key, should be unique and non-empty string\r\n    label: 'Sunday',\r\n    value: 'option1'\r\n}, {\r\n    id: '2',\r\n    label: 'Monday',\r\n    value: 'option2'\r\n}, {\r\n    id: '3',\r\n    label: 'Tuesday',\r\n    value: 'option2'}\r\n    , {\r\n    id: '4',\r\n    label: 'Wednesday',\r\n    value: 'option2'}\r\n    , {\r\n    id: '5',\r\n    label: 'Thursday',\r\n    value: 'option2'}\r\n    , {\r\n    id: '6',\r\n    label: 'Friday',\r\n    value: 'option2'}\r\n    , {\r\n    id: '7',\r\n    label: 'Saturday',\r\n    value: 'option2'}\r\n\r\n]\r\n\r\nlet currUser\r\nlet time = 12\r\nconst ModifyScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [radioButtons, setRadioButtons] = useState(radioButtonsData)\r\n\r\n\r\n    \r\n    function onPressRadioButton(radioButtonsArray) {\r\n        setRadioButtons(radioButtonsArray);\r\n    }\r\n\r\n    const loadData = async ()=> {  \r\n\r\n        console.log(Auth.Credentials.Auth.user.username);\r\n        const username = Auth.Credentials.Auth.user.username;\r\n        currUser = await DataStore.query(User,  u => u.username(\"eq\", username)); \r\n\r\n\r\n     };\r\n\r\n    loadData();\r\n\r\n\r\n    const signOut = ()=> {\r\n        Auth.signOut()\r\n\r\n    }\r\n    const GoCalScreen = ()=> {\r\n        navigation.navigate('CalanderScreen');\r\n\r\n    }\r\n    const ChangeSchedule = async ()=> {\r\n        var temp = 10\r\n\r\n        radioButtons.forEach((x,idx) => {\r\n            if(x.selected == true) {\r\n                temp = idx;\r\n            }\r\n\r\n        })\r\n        if (temp == 10) {\r\n            Alert(\"Please choose a Day\");\r\n            return;\r\n        }\r\n        let weekStart = getWeekBegin();\r\n\r\n        currUser[0].TrainingDayList.forEach((x,idx1) => {\r\n            let res = x.weekStartDate.localeCompare(weekStart.toDateString())\r\n            if (res == 0) {\r\n\r\n                x.exercisesDays.forEach((y,idx2) => {\r\n                    if (temp == idx2) {\r\n                        const deepCopyWithLodashCloneDeep = _.cloneDeep(currUser[0].TrainingDayList[idx1].exercisesDays)\r\n                        deepCopyWithLodashCloneDeep\r\n\r\n                        //y.startTime = time\r\n\r\n                        deepCopyWithLodashCloneDeep[idx2].startTime =time;\r\n\r\n                        DataStore.save(\r\n                            User.copyOf(currUser[0], updated => {\r\n                            updated.TrainingDayList[idx1].exercisesDays = deepCopyWithLodashCloneDeep;\r\n                \r\n                            })\r\n                        );\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n        alert(\"Day Time Changed\")\r\n    }\r\n\r\n    function getWeekBegin() {\r\n        var now = new Date();\r\n        var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\r\n        console.log(next)\r\n        return next;\r\n     }\r\n\r\n     const ReGenerateDay= async ()=> {\r\n        try {\r\n        var temp = 10\r\n        const exercisesDB = await DataStore.query(ExercisesStorage);\r\n        radioButtons.forEach((x,idx) => {\r\n            if(x.selected == true) {\r\n                temp = idx;\r\n            }\r\n\r\n        })\r\n        if (temp == 10) {\r\n            Alert(\"Please choose a Day\");\r\n            alert(\"Please choose a Day\");\r\n            return;\r\n        }\r\n        let weekStart = getWeekBegin();\r\n\r\n        currUser[0].TrainingDayList.forEach((x,idx1) => {\r\n            let res = x.weekStartDate.localeCompare(weekStart.toDateString())\r\n            if (res == 0) {\r\n\r\n                x.exercisesDays.forEach((y,idx2) => {\r\n                    if (temp == idx2) {\r\n                        const deepCopyWithLodashCloneDeep = _.cloneDeep(currUser[0].TrainingDayList[idx1].exercisesDays)\r\n                        deepCopyWithLodashCloneDeep\r\n\r\n                    \r\n\r\n                        var dailyExercises = []\r\n                        var selectExercises = []\r\n                        //select the exercises for the day\r\n                        for (var i=0; i <5;i++) {\r\n                            var alreadyAdd = false;\r\n                            let value = exercisesDB[Math.floor(Math.random() * exercisesDB.length)]\r\n                            selectExercises.forEach(x=> {\r\n                                if (value.name == x.name) {\r\n                                    alreadyAdd = true\r\n                                }\r\n                            }) \r\n                            if (alreadyAdd == true) {\r\n                                i=i-1\r\n                            } else {\r\n                                selectExercises.push(value)\r\n                                const exercisesGened = new Exercises({\r\n                                    \"name\": value.name,\r\n                                    \"videolink\": \"\",\r\n                                    \"numberOfReps\":value.numberOfReps,\r\n                                    \"sets\": value.sets\r\n                \r\n                                })\r\n                \r\n                                dailyExercises.push(exercisesGened);\r\n                            }\r\n            \r\n                        }\r\n\r\n                        deepCopyWithLodashCloneDeep[idx2].exercises =dailyExercises;\r\n                        console.log(deepCopyWithLodashCloneDeep[idx2].exercises)\r\n                        DataStore.save(\r\n                            User.copyOf(currUser[0], updated => {\r\n                            updated.TrainingDayList[idx1].exercisesDays = deepCopyWithLodashCloneDeep;\r\n                \r\n                            })\r\n                        );\r\n\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n        alert(\"Day Generated Again With New Exercises\")\r\n     }catch (error) {\r\n        console.log(error)\r\n    }\r\n     }\r\n    const GenerateWeek = async ()=> {\r\n\r\n        try{\r\n\r\n        let weekStart = getWeekBegin();\r\n        //Get username of curret user\r\n        const username = Auth.Credentials.Auth.user.username;\r\n        let user = await DataStore.query(User,  u => u.username(\"eq\", username));\r\n        if (user == undefined) {\r\n            Alert.alert(\"Next weeks schedule has already been made!\"); \r\n            throw console.error(\"Week Already Made\");\r\n        }\r\n        user[0].TrainingDayList.forEach(x => {\r\n            let res = x.weekStartDate.localeCompare(weekStart.toDateString())\r\n            if (res == 0) {\r\n                Alert.alert(\"Next weeks schedule has already been made!\"); \r\n                throw console.error(\"Week Already Made\");\r\n            }\r\n        })\r\n        //pull all exercises\r\n        const exercisesDB = await DataStore.query(ExercisesStorage);\r\n\r\n        var days = [];\r\n\r\n        for (var x=0; x < 7;x++) {\r\n            var dailyExercises = []\r\n            var selectExercises = []\r\n            //select the exercises for the day\r\n            for (var i=0; i <5;i++) {\r\n                var alreadyAdd = false;\r\n                let value = exercisesDB[Math.floor(Math.random() * exercisesDB.length)]\r\n                selectExercises.forEach(x=> {\r\n                    if (value.name == x.name) {\r\n                        alreadyAdd = true\r\n                    }\r\n                }) \r\n                if (alreadyAdd == true) {\r\n                    i=i-1\r\n                } else {\r\n                    selectExercises.push(value)\r\n                    const exercisesGened = new Exercises({\r\n                        \"name\": value.name,\r\n                        \"videolink\": \"\",\r\n                        \"numberOfReps\":value.numberOfReps,\r\n                        \"sets\": value.sets\r\n    \r\n                    })\r\n    \r\n                    dailyExercises.push(exercisesGened);\r\n                }\r\n\r\n            }\r\n            let dayOfWorkout = getWeekBegin();\r\n            \r\n            dayOfWorkout.setDate(dayOfWorkout.getDate() + x)\r\n            let m = moment(dayOfWorkout).format('YYYY-MM-DD')\r\n            const dayGened = new Day({\r\n                \"Date\": m,\r\n                \"startTime\": \"1\",\r\n                \"endTime\":\"11\",\r\n                \"exercises\": dailyExercises,\r\n            })\r\n            days.push(dayGened);\r\n            \r\n        }\r\n    \r\n        const tempWeek = new Week({\r\n            \"weekStartDate\": weekStart.toDateString(),\r\n            \"exercisesDays\": days\r\n        })\r\n\r\n        const deepCopyWithLodashCloneDeep = _.cloneDeep(user[0].TrainingDayList)\r\n        deepCopyWithLodashCloneDeep.push(tempWeek);\r\n\r\n        currUser=deepCopyWithLodashCloneDeep;\r\n        \r\n        \r\n        await DataStore.save(\r\n            User.copyOf(user[0], updated => {\r\n            updated.TrainingDayList = deepCopyWithLodashCloneDeep;\r\n\r\n            })\r\n        );\r\n        \r\n\r\n     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <View  style={styles.root}>\r\n            \r\n            <Text style={[styles.title]}>Change Next Weeks Schedule</Text>\r\n            <Text style={[styles.subtitle]}>Select a Day</Text>\r\n            <RadioGroup \r\n                radioButtons={radioButtons} \r\n                onPress={onPressRadioButton} \r\n                layout=\"column\"\r\n            />\r\n            <Text style={[styles.subtitle]}>Select a New Time</Text>\r\n            <RnIncrementDecrementBtn minVal={0} minreq={0} max={24} val={12} \r\n                styleBtn={{width:100,height:100,backgroundColor:'#3B71F3',color:'white'}}\r\n                styleTextInput={{width:100,height:100,backgroundColor:'#3B71F3'}}\r\n                labelStyle={{fontSize:25,color:'white'}}\r\n                handleClick={(number)=>{time = number\r\n                }}\r\n                />\r\n            <View style={styles.temp}>\r\n            <CustomButton onPress={ChangeSchedule} text=\"Confirm Change\" />\r\n            <CustomButton onPress={ReGenerateDay} text=\"Generate Day Again\" />\r\n            <CustomButton onPress={GenerateWeek} text=\"Generate Next Weeks Schedule\" />\r\n            <CustomButton onPress={GoCalScreen} text=\"Go Back\" />\r\n            <CustomButton onPress={signOut} text=\"Sign Out\" bgColor=\"#E3242B\"/>\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    root:{\r\n        alignItems: 'center',\r\n        padding:20,\r\n        flex:1\r\n    },\r\n    title: {\r\n        fontSize:30,\r\n        fontWeight:'bold',\r\n        color:'#051C60',\r\n        margin:10,\r\n    },\r\n    subtitle: {\r\n        fontSize:24,\r\n        fontWeight:'bold',\r\n        color:'#051C60',\r\n        margin:10,\r\n    },\r\n\r\n})\r\nexport default ModifyScreen;"]},"metadata":{},"sourceType":"module"}