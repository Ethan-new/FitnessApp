{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Auth } from \"aws-amplify\";\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Day, Exercises, User, Week, ExercisesStorage } from \"../../models\";\nimport _ from \"lodash\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar currUser;\n\nvar CalanderScreen = function CalanderScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currUser = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  function loadData() {\n    var username, temp;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(Auth.Credentials.Auth.user.username);\n            username = Auth.Credentials.Auth.user.username;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 5:\n            temp = _context.sent;\n            setUser(temp[0]);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n            setLoaded(true);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  ;\n\n  var signOut = function signOut() {\n    Auth.signOut();\n  };\n\n  if (loaded == false) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n\n  console.log(currUser);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.topnav,\n      children: [_jsxs(Pressable, {\n        style: styles.topnavLeftArrow,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Previous Day\"\n        })]\n      }), _jsx(Text, {\n        style: styles.navText,\n        children: \"Jun 15\"\n      }), _jsxs(Pressable, {\n        style: styles.topnavRightArrow,\n        children: [\" \", _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Next Day\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.timings,\n          children: \"Welcome Back \"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \"Your Workout today is planned at\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: \" (24H)\"\n        })]\n      }), _jsx(Pressable, {\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Go to Calander\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  topnav: {\n    backgroundColor: '#031b36',\n    paddingVertical: 20,\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: \"row\"\n  },\n  topnavLeftArrow: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'auto',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  topnavRightArrow: {\n    position: \"absolute\",\n    right: 1,\n    backgroundColor: '#22d3ee',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2,\n    width: '30%'\n  },\n  navText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 20,\n    alignContent: 'center'\n  },\n  container: {\n    marginTop: 10,\n    backgroundColor: '#0891b2',\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: '100%'\n  },\n  timings: {\n    color: '#fff',\n    fontSize: '25px',\n    alignSelf: 'center'\n  },\n  description: {\n    color: 'white',\n    marginBottom: 5,\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  }\n});\nexport default CalanderScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/CalanderScreen/CalanderScreen.js"],"names":["React","useState","useEffect","Auth","DataStore","Day","Exercises","User","Week","ExercisesStorage","_","useNavigation","useIsFocused","currUser","CalanderScreen","navigation","loaded","setLoaded","undefined","setUser","loadData","console","log","Credentials","user","username","query","u","temp","signOut","flex","justifyContent","alignItems","styles","topnav","topnavLeftArrow","buttonText","navText","topnavRightArrow","container","timings","description","button","StyleSheet","create","backgroundColor","paddingVertical","width","maxWidth","flexDirection","alignSelf","paddingHorizontal","borderRadius","position","right","fontWeight","color","textTransform","fontSize","alignContent","marginTop","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;;;;;;AAEA,SAAQC,IAAR,QAAmB,aAAnB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,gBAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA2C,0BAA3C;;;;AAGA,IAAIC,QAAJ;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AACA,kBAA4BV,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOe,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA2BhB,QAAQ,CAACiB,SAAD,CAAnC;AAAA;AAAA,MAAOL,QAAP;AAAA,MAAiBM,OAAjB;;AAGAjB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,QAAQ;AACX,GAFQ,EAEL,EAFK,CAAT;;AAIA,WAAeA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEMC,YAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACoB,WAAL,CAAiBpB,IAAjB,CAAsBqB,IAAtB,CAA2BC,QAAvC;AACMA,YAAAA,QAHZ,GAGuBtB,IAAI,CAACoB,WAAL,CAAiBpB,IAAjB,CAAsBqB,IAAtB,CAA2BC,QAHlD;AAAA;AAAA,6CAIuBrB,SAAS,CAACsB,KAAV,CAAgBnB,IAAhB,EAAuB,UAAAoB,CAAC;AAAA,qBAAIA,CAAC,CAACF,QAAF,CAAW,IAAX,EAAiBA,QAAjB,CAAJ;AAAA,aAAxB,CAJvB;;AAAA;AAIUG,YAAAA,IAJV;AAKMT,YAAAA,OAAO,CAACS,IAAI,CAAC,CAAD,CAAL,CAAP;AALN;AAAA;;AAAA;AAAA;AAAA;AAOiBP,YAAAA,OAAO,CAACC,GAAR;;AAPjB;AASIL,YAAAA,SAAS,CAAC,IAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWE;;AAIF,MAAMY,OAAO,GAAG,SAAVA,OAAU,GAAK;AACjB1B,IAAAA,IAAI,CAAC0B,OAAL;AACH,GAFD;;AAOE,MAAIb,MAAM,IAAI,KAAd,EAAqB;AACjB,WACA,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACc,QAAAA,IAAI,EAAC,CAAN;AAASC,QAAAA,cAAc,EAAC,QAAxB;AAAiCC,QAAAA,UAAU,EAAC;AAA5C,OAAb;AAAA,gBACE,KAAC,iBAAD;AADF,MADA;AAIH;;AACDX,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACF,SAEG;AAAA,eACC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEoB,MAAM,CAACC,MAApB;AAAA,iBACA,MAAC,SAAD;AAAW,QAAA,KAAK,EAAED,MAAM,CAACE,eAAzB;AAAA,wBAA2C,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA,UAA3C;AAAA,QADA,EAEA,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA,QAFA,EAGA,MAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,MAAM,CAACK,gBAAzB;AAAA,wBAA4C,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACG,UAApB;AAAA;AAAA,UAA5C;AAAA,QAHA;AAAA,MADD,EAOC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACM,SAApB;AAAA,iBAEA,MAAC,IAAD;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAAA;AAAA,UADJ,EAEQ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACQ,WAApB;AAAA;AAAA,UAFR,EAGQ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACQ,WAApB;AAAA;AAAA,UAHR;AAAA,QAFA,EAOM,KAAC,SAAD;AAAW,QAAA,KAAK,EAAER,MAAM,CAACS,MAAzB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAET,MAAM,CAACG,UAApB;AAAA;AAAA;AADF,QAPN;AAAA,MAPD;AAAA,IAFH;AAsBH,CA7DD;;AA8DA,IAAMH,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,eAAe,EAAE,SADX;AAENC,IAAAA,eAAe,EAAE,EAFX;AAINC,IAAAA,KAAK,EAAE,MAJD;AAKNC,IAAAA,QAAQ,EAAE,MALJ;AAMNC,IAAAA,aAAa,EAAC;AANR,GADuB;AAS/Bd,EAAAA,eAAe,EAAE;AAEfU,IAAAA,eAAe,EAAE,SAFF;AAGfK,IAAAA,SAAS,EAAE,MAHI;AAIfC,IAAAA,iBAAiB,EAAE,EAJJ;AAKfL,IAAAA,eAAe,EAAE,CALF;AAMfM,IAAAA,YAAY,EAAE,CANC;AAOfL,IAAAA,KAAK,EAAE;AAPQ,GATc;AAmB/BT,EAAAA,gBAAgB,EAAE;AAChBe,IAAAA,QAAQ,EAAC,UADO;AAEhBC,IAAAA,KAAK,EAAC,CAFU;AAGhBT,IAAAA,eAAe,EAAE,SAHD;AAIhBM,IAAAA,iBAAiB,EAAE,EAJH;AAKhBL,IAAAA,eAAe,EAAE,CALD;AAMhBM,IAAAA,YAAY,EAAE,CANE;AAOhBL,IAAAA,KAAK,EAAE;AAPS,GAnBa;AA6B/BV,EAAAA,OAAO,EAAE;AACPkB,IAAAA,UAAU,EAAE,MADL;AAEPC,IAAAA,KAAK,EAAE,OAFA;AAGPC,IAAAA,aAAa,EAAE,WAHR;AAIPC,IAAAA,QAAQ,EAAE,EAJH;AAKPC,IAAAA,YAAY,EAAC;AALN,GA7BsB;AAoC/BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,SAAS,EAAE,EADF;AAETf,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,eAAe,EAAE,EAHR;AAITK,IAAAA,iBAAiB,EAAE,EAJV;AAKTC,IAAAA,YAAY,EAAE,CALL;AAMTF,IAAAA,SAAS,EAAE,QANF;AAOTH,IAAAA,KAAK,EAAE,KAPE;AAQTC,IAAAA,QAAQ,EAAE;AARD,GApCoB;AA+C/BR,EAAAA,OAAO,EAAE;AACPgB,IAAAA,KAAK,EAAE,MADA;AAEPE,IAAAA,QAAQ,EAAE,MAFH;AAGPR,IAAAA,SAAS,EAAE;AAHJ,GA/CsB;AAoD/BT,EAAAA,WAAW,EAAE;AACXe,IAAAA,KAAK,EAAE,OADI;AAEXK,IAAAA,YAAY,EAAE,CAFH;AAGXH,IAAAA,QAAQ,EAAE,EAHC;AAIXR,IAAAA,SAAS,EAAE;AAJA,GApDkB;AA0D/BR,EAAAA,MAAM,EAAE;AACNG,IAAAA,eAAe,EAAE,SADX;AAENK,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,iBAAiB,EAAE,EAHb;AAINL,IAAAA,eAAe,EAAE,CAJX;AAKNM,IAAAA,YAAY,EAAE;AALR,GA1DuB;AAiE/BhB,EAAAA,UAAU,EAAE;AACVmB,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,KAAK,EAAE,OAFG;AAGVC,IAAAA,aAAa,EAAE,WAHL;AAIVC,IAAAA,QAAQ,EAAE;AAJA;AAjEmB,CAAlB,CAAf;AAyEA,eAAe5C,cAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {View, Text, TouchableOpacity, Alert, ActivityIndicator,StyleSheet,Pressable} from 'react-native'\r\nimport {Auth} from \"aws-amplify\"\r\n\r\nimport { DataStore } from '@aws-amplify/datastore';\r\nimport { Day, Exercises, User, Week, ExercisesStorage } from '../../models';\r\nimport _ from \"lodash\"\r\n\r\nimport { useNavigation, useIsFocused} from \"@react-navigation/native\";\r\n\r\n\r\nlet currUser\r\n\r\nconst CalanderScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currUser, setUser]= useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    } , [])\r\n    \r\n    async function loadData() {\r\n      try {\r\n          console.log(Auth.Credentials.Auth.user.username);\r\n          const username = Auth.Credentials.Auth.user.username;\r\n          let temp = await DataStore.query(User,  u => u.username(\"eq\", username))\r\n          setUser(temp[0])\r\n\r\n      } catch (err) {console.log(err)}\r\n\r\n        setLoaded(true)\r\n\r\n     };\r\n\r\n\r\n\r\n    const signOut = ()=> {\r\n        Auth.signOut()\r\n    }\r\n\r\n\r\n\r\n\r\n      if (loaded == false) {\r\n          return(\r\n          <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator></ActivityIndicator>\r\n          </View>)\r\n      }\r\n      console.log(currUser)\r\n    return (\r\n        \r\n       <>\r\n        <View style={styles.topnav}>\r\n        <Pressable style={styles.topnavLeftArrow}> <Text style={styles.buttonText}>Previous Day</Text></Pressable>    \r\n        <Text style={styles.navText}>Jun 15</Text> \r\n        <Pressable style={styles.topnavRightArrow}> <Text style={styles.buttonText}>Next Day</Text></Pressable>\r\n\r\n        </View>\r\n        <View style={styles.container}>\r\n          \r\n        <View>\r\n            <Text style={styles.timings}>Welcome Back {}</Text>\r\n                <Text style={styles.description}>Your Workout today is planned at</Text>\r\n                <Text style={styles.description}>{} (24H)</Text>\r\n          </View>\r\n              <Pressable style={styles.button}>\r\n                <Text style={styles.buttonText}>Go to Calander</Text>\r\n              </Pressable>\r\n        </View>\r\n       </>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n  topnav: {\r\n    backgroundColor: '#031b36',\r\n    paddingVertical: 20,\r\n\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    flexDirection:\"row\"\r\n  },\r\n  topnavLeftArrow: {\r\n\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'auto',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  topnavRightArrow: {\r\n    position:\"absolute\",\r\n    right:1,\r\n    backgroundColor: '#22d3ee',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n    width: '30%',\r\n\r\n  },\r\n  navText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 20,\r\n    alignContent:'center'\r\n  },\r\n  container: {\r\n    marginTop: 10,\r\n    backgroundColor: '#0891b2',\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    alignSelf: 'center',\r\n    width: '90%',\r\n    maxWidth: '100%',\r\n    \r\n  },\r\n  timings: {\r\n    color: '#fff',\r\n    fontSize: '25px',\r\n    alignSelf: 'center'\r\n  },\r\n  description: {\r\n    color: 'white',\r\n    marginBottom: 5,\r\n    fontSize: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 14\r\n  }\r\n});\r\n\r\nexport default CalanderScreen;"]},"metadata":{},"sourceType":"module"}