{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Auth } from \"aws-amplify\";\nimport moment, { months } from \"moment\";\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Day, Exercises, User, Week, ExercisesStorage, CalDays, Cals, DailyFoodItems } from \"../../models\";\nimport _ from \"lodash\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport { FoodItems } from \"../../models\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction getTodaysDate() {\n  var next = new Date();\n  return next;\n}\n\nfunction getWeekBegin() {\n  var now = new Date();\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\n  return next;\n}\n\nvar CalorieScreen = function CalorieScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currUser = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userInput = _useState6[0],\n      setUserInput = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userInputQua = _useState8[0],\n      setUserInputQua = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currDate = _useState10[0],\n      setCurrDate = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currFood = _useState12[0],\n      setCurrFood = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      allFood = _useState14[0],\n      setAllFood = _useState14[1];\n\n  var GoToHome = function GoToHome() {\n    navigation.navigate('Home');\n  };\n\n  var IsFocused = useIsFocused();\n  useEffect(function () {\n    loadData();\n  }, [IsFocused]);\n\n  function loadData() {\n    var username, user, allfood, today;\n    return _regeneratorRuntime.async(function loadData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            username = Auth.Credentials.Auth.user.username;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(DataStore.query(User, function (u) {\n              return u.username(\"eq\", username);\n            }));\n\n          case 4:\n            user = _context.sent;\n            setUser(user[0]);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(DataStore.query(FoodItems));\n\n          case 8:\n            allfood = _context.sent;\n            setAllFood(allfood);\n            today = new Date();\n            user[0].CalCount.allDays.forEach(function (x) {\n              if (x.Date.slice(0, 16) === today.toString().slice(0, 16)) {\n                setCurrDate(x);\n              }\n            });\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n            setLoaded(true);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  ;\n\n  function addItem() {\n    var isitemfound = false;\n    var itemfound;\n    allFood.forEach(function (x) {\n      if (x.name == userInput) {\n        isitemfound = true;\n        itemfound = x;\n      }\n    });\n\n    if (isitemfound == true) {\n      var foodnamecap = itemfound.name.charAt(0).toUpperCase() + itemfound.name.slice(1);\n      var totalcal = parseInt(itemfound.calperpound, 10) * parseInt(userInputQua, 10);\n      var newFoodtoAdd = new DailyFoodItems({\n        \"name\": foodnamecap,\n        \"weight\": userInputQua,\n        \"calCount\": totalcal.toString()\n      });\n\n      var deepCopyWithLodashCloneDeep = _.cloneDeep(currDate);\n\n      deepCopyWithLodashCloneDeep.foodItems.push(newFoodtoAdd);\n      console.log(\"Food\");\n      console.log(deepCopyWithLodashCloneDeep.foodItems);\n      var newCalCount = parseInt(currDate.currCals, 10) + totalcal;\n      var updatedDay = new CalDays({\n        \"Date\": currDate.Date,\n        \"currCals\": newCalCount.toString(),\n        \"foodItems\": deepCopyWithLodashCloneDeep.foodItems,\n        \"goalCals\": currDate.goalCals\n      });\n      console.log(updatedDay);\n\n      var deepCopyWithLodashCloneDeep2 = _.cloneDeep(currUser.CalCount.allDays);\n\n      deepCopyWithLodashCloneDeep2.push(updatedDay);\n      var updatedCals = new Cals({\n        \"currTargetCals\": currUser.CalCount.currTargetCals,\n        \"allDays\": deepCopyWithLodashCloneDeep2\n      });\n      DataStore.save(User.copyOf(currUser, function (item) {\n        item.CalCount = updatedCals;\n      }));\n      setCurrDate(updatedDay);\n    } else {\n      console.warn(\"Item not found\");\n    }\n  }\n\n  if (loaded == false) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {})\n    });\n  }\n\n  console.log(\"---------\");\n  console.log(currUser);\n  console.log(currDate);\n  console.log(allFood);\n  console.log(\"---------\");\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: styles.timings,\n          children: [\"You have eaten \", currDate.currCals, \" \"]\n        }), _jsx(Text, {\n          style: styles.timings,\n          children: \"calories today \"\n        }), _jsxs(Text, {\n          style: styles.timings,\n          children: [currDate.goalCals - currDate.currCals, \" more to go!\"]\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(t) {\n            return setUserInput(t);\n          },\n          value: userInput || \"\",\n          placeholder: \"Item Name\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          onChangeText: function onChangeText(t) {\n            return setUserInputQua(t);\n          },\n          value: userInputQua || \"\",\n          placeholder: \"Item Quantity\"\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: addItem,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add Item To Today\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    backgroundColor: '#0891b2',\n    paddingVertical: 16,\n    paddingHorizontal: 12,\n    borderRadius: 5,\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: '100%'\n  },\n  timings: {\n    color: '#fff',\n    fontSize: '25px',\n    alignSelf: 'center'\n  },\n  description: {\n    color: 'white',\n    marginBottom: 5,\n    fontSize: 20,\n    alignSelf: 'center'\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default CalorieScreen;","map":{"version":3,"sources":["C:/Users/spart/Desktop/Capstone/NewApp/React App/fitnessapp/src/screens/CalorieScreen/CalorieScreen.js"],"names":["React","useState","useEffect","Auth","moment","months","DataStore","Day","Exercises","User","Week","ExercisesStorage","CalDays","Cals","DailyFoodItems","_","useNavigation","useIsFocused","FoodItems","getTodaysDate","next","Date","getWeekBegin","now","getFullYear","getMonth","getDate","getDay","CalorieScreen","navigation","loaded","setLoaded","undefined","currUser","setUser","userInput","setUserInput","userInputQua","setUserInputQua","currDate","setCurrDate","currFood","setCurrFood","allFood","setAllFood","GoToHome","navigate","IsFocused","loadData","username","Credentials","user","query","u","allfood","today","CalCount","allDays","forEach","x","slice","toString","console","log","addItem","isitemfound","itemfound","name","foodnamecap","charAt","toUpperCase","totalcal","parseInt","calperpound","newFoodtoAdd","deepCopyWithLodashCloneDeep","cloneDeep","foodItems","push","newCalCount","currCals","updatedDay","goalCals","deepCopyWithLodashCloneDeep2","updatedCals","currTargetCals","save","copyOf","item","warn","flex","justifyContent","alignItems","styles","container","timings","input","t","button","buttonText","StyleSheet","create","marginTop","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","alignSelf","width","maxWidth","color","fontSize","description","marginBottom","fontWeight","textTransform","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {View, Text, TouchableOpacity, Alert, ActivityIndicator,StyleSheet,Pressable, TextInput} from 'react-native'\r\nimport {Auth} from \"aws-amplify\"\r\n\r\nimport moment, { months } from \"moment\";\r\nimport { DataStore } from '@aws-amplify/datastore';\r\nimport { Day, Exercises, User, Week, ExercisesStorage, CalDays, Cals, DailyFoodItems } from '../../models';\r\nimport _ from \"lodash\"\r\n\r\nimport { useNavigation, useIsFocused} from \"@react-navigation/native\";\r\nimport { FoodItems } from \"../../models\";\r\n\r\n\r\nfunction getTodaysDate() {\r\n  var next = new Date();\r\n  return next;\r\n}\r\n\r\nfunction getWeekBegin() {\r\n  var now = new Date();\r\n  var next = new Date(now.getFullYear(), now.getMonth(), now.getDate() - now.getDay());\r\n  return next;\r\n}\r\n\r\n\r\nconst CalorieScreen = () => {\r\n    const navigation = useNavigation();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currUser, setUser]= useState(undefined)\r\n    const [userInput, setUserInput]= useState(null)\r\n    const [userInputQua, setUserInputQua]= useState(null)\r\n    const [currDate, setCurrDate]= useState(null)\r\n    const [currFood, setCurrFood]= useState(null)\r\n    const [allFood, setAllFood]= useState(null)\r\n\r\n  const GoToHome =  ()=> {\r\n    \r\n    navigation.navigate('Home');\r\n}\r\n    \r\n\r\n  const IsFocused = useIsFocused()\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    } , [IsFocused])\r\n    \r\n\r\n\r\n    async function loadData() {\r\n      try {\r\n\r\n          const username = Auth.Credentials.Auth.user.username;\r\n          let user = await DataStore.query(User,  u => u.username(\"eq\", username))\r\n          setUser(user[0])\r\n          \r\n          let allfood = await DataStore.query(FoodItems)\r\n          setAllFood(allfood)\r\n\r\n          const today = new Date()\r\n          /*\r\n          user[0].CalCount.allDays.forEach ((x)=> {\r\n            if (x.Date.slice(0,16) === today.toString().slice(0,16)) {\r\n              setCurrDate(x)\r\n            }\r\n          })\r\n\r\n          if (currDate == undefined  ) {\r\n            console.log(\"made new day\")\r\n\r\n              const newDayToAdd = new CalDays({\r\n              \"Date\": today.toString(),\r\n              \"currCals\": \"0\",\r\n              \"foodItems\": [],\r\n              \"goalCals\": user[0].CalCount.currTargetCals\r\n            })\r\n            const deepCopyWithLodashCloneDeep = _.cloneDeep(user[0].CalCount.allDays)\r\n \r\n            deepCopyWithLodashCloneDeep.push(newDayToAdd)\r\n\r\n            const newCals = new Cals({\r\n              \"currTargetCals\": user[0].CalCount.currTargetCals,\r\n              \"allDays\": newDayToAdd,\r\n            })\r\n            console.log(deepCopyWithLodashCloneDeep)\r\n            DataStore.save(\r\n              User.copyOf(user[0], updated => {\r\n              updated.CalCount = newCals;\r\n              })\r\n          )\r\n          }\r\n          */\r\n\r\n          user[0].CalCount.allDays.forEach ((x)=> {\r\n            if (x.Date.slice(0,16) === today.toString().slice(0,16)) {\r\n              setCurrDate(x)\r\n            }\r\n          })\r\n\r\n      } catch (err) {console.log(err)}\r\n\r\n        setLoaded(true)\r\n\r\n     };\r\n\r\n\r\n     function addItem() {\r\n      let isitemfound = false;\r\n      let itemfound \r\n      allFood.forEach((x) => {\r\n\r\n\r\n        if (x.name == userInput) {\r\n          isitemfound = true\r\n          itemfound = x\r\n\r\n        }\r\n      })\r\n\r\n      if (isitemfound == true) {\r\n\r\n        const foodnamecap = itemfound.name.charAt(0).toUpperCase() + itemfound.name.slice(1);\r\n        const totalcal = parseInt(itemfound.calperpound, 10) * parseInt(userInputQua, 10)\r\n\r\n        const newFoodtoAdd = new DailyFoodItems({\r\n          \"name\": foodnamecap,\r\n          \"weight\": userInputQua,\r\n          \"calCount\": totalcal.toString()\r\n        })\r\n\r\n        const deepCopyWithLodashCloneDeep = _.cloneDeep(currDate)\r\n    \r\n        deepCopyWithLodashCloneDeep.foodItems.push(newFoodtoAdd)\r\n        console.log(\"Food\")\r\n        console.log(deepCopyWithLodashCloneDeep.foodItems)\r\n        let newCalCount = parseInt(currDate.currCals, 10) + totalcal\r\n\r\n        const updatedDay = new CalDays({\r\n          \"Date\": currDate.Date,\r\n          \"currCals\": newCalCount.toString(),\r\n          \"foodItems\": deepCopyWithLodashCloneDeep.foodItems,\r\n          \"goalCals\": currDate.goalCals\r\n        })\r\n        console.log(updatedDay)\r\n\r\n\r\n        const deepCopyWithLodashCloneDeep2 = _.cloneDeep(currUser.CalCount.allDays)\r\n\r\n        deepCopyWithLodashCloneDeep2.push(updatedDay)\r\n\r\n        const updatedCals = new Cals({\r\n          \"currTargetCals\": currUser.CalCount.currTargetCals,\r\n          \"allDays\": deepCopyWithLodashCloneDeep2,\r\n\r\n        })\r\n\r\n        /* Models in DataStore are immutable. To update a record you must use the copyOf function\r\n        to apply updates to the item’s fields rather than mutating the instance directly */\r\n        DataStore.save(User.copyOf(currUser, item => {\r\n          item.CalCount=updatedCals\r\n        }));\r\n\r\n        setCurrDate(updatedDay)\r\n\r\n      } else {\r\n        console.warn(\"Item not found\")\r\n      }\r\n     }\r\n      if (loaded == false) {\r\n        \r\n          return(\r\n          <View style={{flex:1, justifyContent:'center',alignItems:'center'}}>\r\n            <ActivityIndicator></ActivityIndicator>\r\n          </View>)\r\n      }\r\n      console.log(\"---------\")\r\n      console.log(currUser)\r\n      console.log(currDate)\r\n      console.log(allFood)\r\n      console.log(\"---------\")\r\n\r\n    return (\r\n        \r\n       <>\r\n          <View style={styles.container}>\r\n            <View>\r\n              <Text style={styles.timings}>You have eaten {currDate.currCals} </Text>\r\n              <Text style={styles.timings}>calories today </Text>\r\n              <Text style={styles.timings}>{currDate.goalCals - currDate.currCals} more to go!</Text>\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.container}>\r\n            <View>\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={t => setUserInput(t)}\r\n                value={userInput || \"\"}\r\n                placeholder=\"Item Name\"\r\n                />\r\n              <TextInput\r\n                style={styles.input}\r\n                onChangeText={t => setUserInputQua(t)}\r\n                value={userInputQua || \"\"}\r\n                placeholder=\"Item Quantity\"\r\n                />\r\n                  <Pressable style={styles.button} onPress={addItem}>\r\n                    <Text style={styles.buttonText}>Add Item To Today</Text>\r\n                  </Pressable>\r\n            </View>\r\n          </View>\r\n\r\n\r\n       </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 10,\r\n    backgroundColor: '#0891b2',\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 5,\r\n    alignSelf: 'center',\r\n    width: '90%',\r\n    maxWidth: '100%',\r\n    \r\n  },\r\n  timings: {\r\n    color: '#fff',\r\n    fontSize: '25px',\r\n    alignSelf: 'center'\r\n  },\r\n  description: {\r\n    color: 'white',\r\n    marginBottom: 5,\r\n    fontSize: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#22d3ee',\r\n    alignSelf: 'center',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 4,\r\n    borderRadius: 2,\r\n  },\r\n  buttonText: {\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textTransform: 'uppercase',\r\n    fontSize: 14\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n\r\n  },\r\n});\r\nexport default CalorieScreen;"]},"metadata":{},"sourceType":"module"}